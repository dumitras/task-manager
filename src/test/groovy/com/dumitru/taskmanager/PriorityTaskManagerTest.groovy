/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package com.dumitru.taskmanager

import com.dumitru.taskmanager.process.Priority
import com.dumitru.taskmanager.process.Process

class PriorityTaskManagerTest extends BaseTaskManagerTest {


    def 'add process replace oldest process with lowest priority when maximum capacity is reached test'() {

        setup:
        def newProcess = new Process(Priority.MEDIUM)

        def process1 = new Process(Priority.HIGH)
        def oldestProcessWithLowestPriority = new Process(Priority.LOW)
        def process3 = new Process(Priority.MEDIUM)
        def process4 = new Process(Priority.LOW)
        def process5 = new Process(Priority.MEDIUM)

        PriorityTaskManager taskManager = new PriorityTaskManager()
        taskManager.add(process1)
        taskManager.add(oldestProcessWithLowestPriority)
        taskManager.add(process3)
        taskManager.add(process4)
        taskManager.add(process5)

        when:
        taskManager.add(newProcess)

        then:
        !taskManager.getProcesses().contains(oldestProcessWithLowestPriority)
        taskManager.getProcesses().contains(newProcess)
    }

}
